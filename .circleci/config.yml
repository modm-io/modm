version: 2
jobs:
  unittests:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Check environment
          command: |
            env
            locale -a
            python --version  || true
            python2 --version || true
            python3 --version || true
            which scons
            scons --version
            which avr-g++
            avr-g++ --version
            which arm-none-eabi-g++
            arm-none-eabi-g++ --version
      - run:
          name: Hosted Unittests
          command: |
            (cd test && make run-hosted-linux)
      - run:
          name: Compile STM32 Unittests
          command: |
            (cd test && make compile-nucleo-f411)
            (cd test && make compile-nucleo-f103)
      - run:
          name: Compile AVR Unittests
          command: |
            (cd test && make compile-al-avreb-can)
      - run:
          name: Execute Python Scripts
          command: |
            python2 tools/scripts/authors.py --handles --count --shoutout --since 2017-01-01
            python3 tools/scripts/authors.py --handles --count --shoutout --since 2017-01-01
            python2 tools/system_design/builder/system_layout.py examples/communication/xml/communication.xml -o /tmp
            python3 tools/system_design/builder/system_layout.py examples/communication/xml/communication.xml -o /tmp

  stm32f0-f1-examples:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Examples STM32F0 Series
          command: |
            (cd examples && ../tools/scripts/examples_compile.py stm32f0_discovery stm32f072_discovery nucleo_f031k6 nucleo_f042k6 stm32f030f4p6_demo_board)
      - run:
          name: Examples STM32F1 Series
          command: |
            (cd examples && ../tools/scripts/examples_compile.py stm32f1_discovery nucleo_f103rb olimexino_stm32 stm32f103c8t6_blue_pill stm32f103c8t6_black_pill)

  stm32f3-l4-f7-examples:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Examples STM32F3 Series
          command: |
            (cd examples && ../tools/scripts/examples_compile.py stm32f3_discovery nucleo_f303k8)
      - run:
          name: Examples STM32F7 Series
          command: |
            (cd examples && ../tools/scripts/examples_compile.py stm32f746g_discovery)
      - run:
          name: Examples STM32L4 Series
          command: |
            (cd examples && ../tools/scripts/examples_compile.py stm32l476_discovery nucleo_l476rg nucleo_l432kc)

  stm32f4-examples:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Examples STM32F4 Series
          command: |
            (cd examples && ../tools/scripts/examples_compile.py stm32f4_discovery)
            (cd examples && ../tools/scripts/examples_compile.py stm32f429_discovery stm32f469_discovery nucleo_f401re nucleo_f411re nucleo_f429zi)

  avr-examples:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Examples AVR Series
          command: |
            (cd examples && ../tools/scripts/examples_compile.py avr arduino_uno)

  generic-examples:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Generic Examples
          command: |
            (cd examples && ../tools/scripts/examples_compile.py generic)

  linux-examples:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Examples Linux
          command: |
            (cd examples && ../tools/scripts/examples_compile.py linux zmq)

  avr-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all AVRs
          command: |
            (cd test/all && python3 run_all.py at)
      - store_artifacts:
          path: test/all/log
          destination: log

  stm32f0-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all STM32F0
          command: |
            (cd test/all && python3 run_all.py stm32f0)
      - store_artifacts:
          path: test/all/log
          destination: log

  stm32f1-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all STM32F1
          command: |
            (cd test/all && python3 run_all.py stm32f1)
      - store_artifacts:
          path: test/all/log
          destination: log

  stm32f2-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all STM32F2
          command: |
            (cd test/all && python3 run_all.py stm32f2)
      - store_artifacts:
          path: test/all/log
          destination: log

  stm32f3-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all STM32F3
          command: |
            (cd test/all && python3 run_all.py stm32f3)
      - store_artifacts:
          path: test/all/log
          destination: log

  stm32f4-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all STM32F4
          command: |
            (cd test/all && python3 run_all.py stm32f4)
      - store_artifacts:
          path: test/all/log
          destination: log

  stm32f7-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all STM32F7
          command: |
            (cd test/all && python3 run_all.py stm32f7)
      - store_artifacts:
          path: test/all/log
          destination: log

  stm32l4-compile-all:
    docker:
      - image: modm/modm-build:latest
    environment:
      - LANG: "en_US.UTF-8"
      - SCONS_LIB_DIR: "/usr/local/lib/python3.6/dist-packages/scons-3.0.1"
      - SCONSFLAGS: "-j3"
    steps:
      - checkout
      - run: git submodule sync && git submodule update --init
      - run:
          name: Compile HAL for all STM32L4
          command: |
            (cd test/all && python3 run_all.py stm32l4)
      - store_artifacts:
          path: test/all/log
          destination: log

workflows:
  version: 2
  build:
    jobs:
      - stm32f4-examples
      - linux-examples
      - unittests
      - stm32f3-l4-f7-examples
      - avr-examples
      - stm32f0-f1-examples
      - generic-examples

      - avr-compile-all:
          requires:
            - unittests
            - avr-examples
      - stm32f0-compile-all:
          requires:
            - unittests
            - stm32f0-f1-examples
      - stm32f1-compile-all:
          requires:
            - unittests
            - stm32f0-f1-examples
      - stm32f2-compile-all:
          requires:
            - unittests
      - stm32f3-compile-all:
          requires:
            - unittests
            - stm32f3-l4-f7-examples
      - stm32f4-compile-all:
          requires:
            - unittests
            - stm32f4-examples
      - stm32f7-compile-all:
          requires:
            - unittests
            - stm32f3-l4-f7-examples
      - stm32l4-compile-all:
          requires:
            - unittests
            - stm32f3-l4-f7-examples
