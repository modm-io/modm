#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2017, Fabian Greif
# Copyright (c) 2017, Niklas Hauser
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------

import os
import sys
import glob

rootpath = localpath("ext", "modm-devices", "tools", "device")
sys.path.append(rootpath)

import modm.pkg
import modm.parser

def init(repo):
    repo.name = "modm"

    devices = {}
    try:
        parser = modm.parser.DeviceParser()
        device_file_names  = glob.glob(localpath("ext/modm-devices/devices/**/*.xml"))
        device_file_names += glob.glob(localpath("tools/devices/**/*.xml"))
        # roughly filter to supported devices
        supported = ["stm32f0", "stm32f1", "stm32f2", "stm32f3", "stm32f4", "stm32f7",
                     "stm32l4", "at90", "attiny", "atmega", "hosted"]
        device_file_names = [dfn for dfn in device_file_names if any(s in dfn for s in supported)]
        for device_file_name in device_file_names:
            device_file = parser.parse(device_file_name)
            for device in device_file.get_devices():
                devices[device.partname] = device
    except (modm.ParserException) as e:
        print(e)
        exit(1)

    repo.add_option(
        EnumerationOption(name="target",
                          description="Meta-HAL target device",
                          enumeration=devices))

def prepare(repo, options):
    repo.find_modules_recursive(".", modulefile="*.lb", ignore="repo.lb")

def build(env):
    env.append_metadata_unique("include_path", "src")
