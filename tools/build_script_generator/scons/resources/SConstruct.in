# Copyright (c) 2017-2021, Niklas Hauser
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import os
from os.path import join, abspath

%% if cache_dir | length
CacheDir("{{ cache_dir | modm.windowsify(escape_level=1)}}")
%% endif
env = DefaultEnvironment(tools=[], ENV=os.environ)
env["CONFIG_PROJECT_NAME"] = "{{ options[":build:project.name"] }}"
env["CONFIG_BUILD_BASE"] = abspath("{{ build_path | modm.windowsify(escape_level=1)}}")
env["CONFIG_ARTIFACT_PATH"] = abspath("{{ artifact_path | modm.windowsify(escape_level=1)}}")
generated_paths = {{ generated_paths }}

# Building all libraries
libraries = env.SConscript(dirs=generated_paths, exports="env")
env.Alias("library", libraries)

%% if is_unittest
# Building unit tests
headers = env.FindHeaderFiles("{{ unittest_source }}")
sources = [env.UnittestRunner(target="unittest_runner.cpp", source=headers)]
%% else
env.Append(CPPPATH=abspath("."))
ignored = [".lbuild_cache", env["CONFIG_BUILD_BASE"]] + generated_paths
sources = []
%% endif

%% if has_image_source
# Generating image sources
env.Append(CPPPATH=abspath("{{ image_source }}"))
ignored.append("{{ image_source }}")
for image in env.FindFiles("{{ image_source }}", ".pbm"):
    source, _ = env.Bitmap(str(image))
    sources.append(source)
%% endif
%% if has_xpcc_generator
# Generating XPCC sources
env.Append(CPPPATH=abspath("{{ generator_path }}"))
ignored.append("{{ generator_path }}")
sources += env.XpccCommunication(
    xmlfile=abspath("{{ generator_source }}"),
    container="{{ generator_container }}",
    path=abspath("{{ generator_path }}"),
    namespace="{{ generator_namespace }}",
    include_paths=["."])
%% endif

%% if options["::info.git"] != "Disabled"
sources.append(env.InfoGit(with_status={{ "True" if "Status" in options["::info.git"] else "False" }}))
%% endif
%% if options["::info.build"]
sources.append(env.InfoBuild())
%% endif

%% if not is_unittest
# Finding application sources
sources += env.FindSourceFiles(".", ignorePaths=ignored)
%% endif

# So you want to add or remove compile options?
#   0. Check what options you want to add to GCC:
#      https://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html
#   1. Check what the environment variables are called in SCons:
#      https://www.scons.org/doc/latest/HTML/scons-user/apa.html
#   2. You can append one or multiple options like this
#       env.Append(CCFLAGS="-pedantic")
#       env.Append(CCFLAGS=["-pedantic", "-pedantic-errors"])
#   3. If you need to remove options, you need to do this:
#       env["CCFLAGS"].remove("-pedantic")
#      Note that a lot of options also have a "-no-{option}" option
#      that may overwrite previous options.
#   4. Add your environment changes below these instructions
#      inside this SConstruct file.
#   5. COMMIT THIS SCONSTRUCT FILE NOW!
#   6. Tell lbuild not to overwrite this SConstruct file anymore:
#       <option name="modm:build:scons:include_sconstruct">False</option>
#   7. Anyone using your project now also benefits from your environment changes.

env.BuildTarget(sources)
