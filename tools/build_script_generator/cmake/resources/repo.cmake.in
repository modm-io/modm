# Copyright (c) 2018, Sergiy Yevtushenko
# Copyright (c) 2018-2019, Niklas Hauser
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# This file was autogenerated by the modm cmake builder. Do not modify!

%% if is_modm
include(${CMAKE_CURRENT_LIST_DIR}/cmake/configure-gcc.cmake)
%% endif

# Toolchain configuration
%% macro generate_flags_for_profile(name, profile)
set({{ name | upper }}{{ "_" ~ (profile | upper) if profile | length else "" }} "\
%% for flag in flags[name][profile] | sort
    {{ flag | flags_format }} \
%% endfor
")
%% endmacro

%% macro generate_flags(name)
%% for profile in ["", "release", "debug"]
{{ generate_flags_for_profile(name, profile) }}
%% endfor
%% endmacro

{{ generate_flags("cppdefines") }}
{{ generate_flags("ccflags") }}
{{ generate_flags("cflags") }}
{{ generate_flags("cxxflags") }}
{{ generate_flags("asflags") }}
{{ generate_flags("archflags") }}
{{ generate_flags("linkflags") }}

%% if is_modm
string(APPEND CCFLAGS "${ARCHFLAGS}")
string(APPEND ASFLAGS "${ARCHFLAGS}")
string(APPEND LINKFLAGS "${ARCHFLAGS}")
%% endif

string(APPEND CMAKE_C_FLAGS         "${CCFLAGS} ${CFLAGS}")
string(APPEND CMAKE_C_FLAGS_RELEASE "${CCFLAGS_RELEASE}")
string(APPEND CMAKE_C_FLAGS_DEBUG   "${CCFLAGS_DEBUG}")

string(APPEND CMAKE_CXX_FLAGS         "${CCFLAGS} ${CXXFLAGS}")
string(APPEND CMAKE_CXX_FLAGS_RELEASE "${CCFLAGS_RELEASE}")
string(APPEND CMAKE_CXX_FLAGS_DEBUG   "${CCFLAGS_DEBUG}")

string(APPEND CMAKE_ASM_FLAGS         "${ASFLAGS}")
string(APPEND CMAKE_ASM_FLAGS_RELEASE "${ASFLAGS_RELEASE}")
string(APPEND CMAKE_ASM_FLAGS_DEBUG   "${ASFLAGS_DEBUG}")

string(APPEND CMAKE_EXE_LINKER_FLAGS         "${LINKFLAGS}")
string(APPEND CMAKE_EXE_LINKER_FLAGS_RELEASE "${LINKFLAGS_RELEASE}")
string(APPEND CMAKE_EXE_LINKER_FLAGS_DEBUG   "${LINKFLAGS_DEBUG}")

add_definitions("${CPPDEFINES}")
if(CMAKE_BUILD_TYPE STREQUAL "Release")
    add_definitions("${CPPDEFINES_RELEASE}")
endif()
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    add_definitions("${CPPDEFINES_DEBUG}")
endif()

%% if include_paths | length
include_directories(
%% for path in include_paths | sort
    ${CMAKE_CURRENT_LIST_DIR}/{{ path | relocate }}
%% endfor
)
%% endif

%% if library_paths | length
link_directories(
%% for path in library_paths | sort
    ${CMAKE_CURRENT_LIST_DIR}/{{ path | relocate }}
%% endfor
)
%% endif

%% if libraries | length
link_libraries(
%% for library in libraries | sort
    {{ library }}
%% endfor
)
%% endif

%% if packages | length
pkg_check_modules(PACKAGES "{{ packages | sort | join(" ") }}")
include_directories(${PACKAGES_INCLUDE_DIRS})
add_definitions(${PACKAGES_CFLAGS})
link_directories(${PACKAGES_LIBRARY_DIRS})
link_libraries(${PACKAGES_LIBRARIES})
list(JOIN PACKAGES_LDFLAGS_OTHER " " PACKAGES_LDFLAGS_OTHER)
string(APPEND CMAKE_EXE_LINKER_FLAGS "${PACKAGES_LDFLAGS_OTHER}")
%% endif

%% if sources | length
list(APPEND SOURCE_FILES
%% for file, flags in sources | sort
    ${CMAKE_CURRENT_LIST_DIR}/{{ file | relocate }}
%% endfor
)
%% endif

%% if asm_sources | length
set_source_files_properties(
%% for file in asm_sources | sort
    ${CMAKE_CURRENT_LIST_DIR}/{{ file | relocate }}
%% endfor
    PROPERTIES LANGUAGE CXX
)
%% endif

%% for file, flags in sources if flags | length
    %% for profile, pflags in flags.items() if pflags | length
        %% if profile == ""
set_source_files_properties(${CMAKE_CURRENT_LIST_DIR}/{{ file | relocate }} PROPERTIES COMPILE_FLAGS "{{ pflags | join(" ")}}")
        %% else
if(CMAKE_BUILD_TYPE STREQUAL "{{ profile | capitalize }}")
    set_source_files_properties(${CMAKE_CURRENT_LIST_DIR}/{{ file | relocate }} PROPERTIES COMPILE_FLAGS "{{ pflags | join(" ")}}")
endif()
        %% endif
    %% endfor
%% endfor
