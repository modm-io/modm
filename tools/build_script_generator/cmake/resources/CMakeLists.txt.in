# This file was autogenerated by the modm cmake builder.
# Do not modify!

CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT({{ project_name }})

IF(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE Release)
ENDIF()

FILE(GLOB_RECURSE APP_STARTUP *.sx)
SET_SOURCE_FILES_PROPERTIES(${APP_STARTUP} PROPERTIES LANGUAGE CXX)

FILE(GLOB APP_SOURCE_FILES *.c *.cpp *.hpp *.h)

SET(SOURCE_FILES
%% for file in sources | sort
    {{ file }}
%% endfor
    ${APP_SOURCE_FILES}
)

INCLUDE_DIRECTORIES(
    ${CMAKE_CURRENT_SOURCE_DIR}
%% for path in include_paths | sort
    {{ path }}
%% endfor
)
INCLUDE_DIRECTORIES(SYSTEM include)

SET(PROJECT_PLATFORM   {{ platform }})
SET(PROJECT_COMPILER   {{ compiler }})
SET(PROJECT_PART       {{ partname }})
SET(PROJECT_FAMILY     {{ family   }})
SET(PROJECT_CORE       {{ core     }})
SET(PROJECT_NAME       {{ project_name }})
SET(PROJECT_BUILD_PATH {{ build_path }})

INCLUDE(./modm/cmake/configure-{{ platform }}-{{ compiler }}.cmake)

if ( APPLE )
    string ( REPLACE "-Wl,-search_paths_first" "" CMAKE_C_LINK_FLAGS ${CMAKE_C_LINK_FLAGS} )
    string ( REPLACE "-Wl,-search_paths_first" "" CMAKE_CXX_LINK_FLAGS ${CMAKE_CXX_LINK_FLAGS} )
endif ()

ADD_EXECUTABLE(${CMAKE_PROJECT_NAME} ${SOURCE_FILES})
SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME} PROPERTIES SUFFIX ".elf")

%% for define in flags["cppdefines"][""]
TARGET_COMPILE_DEFINITIONS(${CMAKE_PROJECT_NAME} PUBLIC "{{ define }}")
%% endfor
%% if flags["cppdefines"]["debug"] | length
IF(CMAKE_BUILD_TYPE STREQUAL "Debug")
%% for define in flags["cppdefines"]["debug"]
	TARGET_COMPILE_DEFINITIONS(${CMAKE_PROJECT_NAME} PUBLIC "{{ define }}")
%% endfor
ENDIF()
%% endif

ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.bin ALL DEPENDS ${CMAKE_PROJECT_NAME} COMMAND ${CMAKE_OBJCOPY} -Obinary ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.bin)
ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.hex ALL DEPENDS ${CMAKE_PROJECT_NAME} COMMAND ${CMAKE_OBJCOPY} -Oihex ${CMAKE_PROJECT_NAME}.elf ${CMAKE_PROJECT_NAME}.hex)
ADD_CUSTOM_TARGET(${CMAKE_PROJECT_NAME}.lss ALL DEPENDS ${CMAKE_PROJECT_NAME} COMMAND ${CMAKE_OBJDUMP}  -x -s -S -l -w ${CMAKE_PROJECT_NAME}.elf > ${CMAKE_PROJECT_NAME}.lss)
ADD_CUSTOM_COMMAND(TARGET ${CMAKE_PROJECT_NAME} POST_BUILD COMMAND ${CMAKE_SIZE} ARGS ${CMAKE_PROJECT_NAME}.elf)
SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)