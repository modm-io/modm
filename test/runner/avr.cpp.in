/*
 * Copyright (c) 2009-2011, 2017, Fabian Greif
 * Copyright (c) 2010, Martin Rosekeit
 * Copyright (c) 2016, Sascha Schade
 * Copyright (c) 2016, Niklas Hauser
 *
 * This file is part of the modm project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
// ----------------------------------------------------------------------------

// WARNING: This file is generated automatically, do not edit!
// Please modify the corresponding 'runner/avr.cpp.in' file instead.
// ----------------------------------------------------------------------------

#include <unittest/reporter.hpp>
#include <unittest/controller.hpp>

#include <modm/platform/platform.hpp>

using namespace modm::platform;
using clock = SystemClock;

${includes}

${names}

using LedGreen = GpioOutputB0;
using LedRed = GpioB1;

modm::IODeviceWrapper< Uart0, modm::IOBuffer::BlockIfFull > loggerDevice;

int
main()
{
	LedGreen::setOutput();
	LedRed::setOutput();

	LedGreen::reset();
	LedRed::set();

	// initialize output device
	Uart0::connect<GpioInputE0::Rxd, GpioOutputE1::Txd>();
	Uart0::initialize<clock, 115200>();

	enableInterrupts();

	loggerDevice.write("Unittests (" __DATE__ ", " __TIME__")\n");

	unittest::Reporter reporter(loggerDevice);
	unittest::Controller::instance().setReporter(reporter);

	LedGreen::set();

	// run tests
${tests}

	unittest::Controller::instance().getReporter().printSummary();

	LedRed::reset();

	while (1)
	{
	}
}
