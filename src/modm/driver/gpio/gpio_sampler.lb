#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2018, Niklas Hauser
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

from collections import OrderedDict

def init(module):
    module.name = ":driver:gpio_sampler"


def prepare(module, options):
    if options[":target"].identifier["platform"] != "stm32":
        return False

    core = options[":target"].driver("core").type
    # Cortex-M0 doesn't have the DWT->CYCCNT and Cortex-M7 support is broken
    if "m0" in core or "m7" in core:
        return False

    module.depends(
        ":platform:gpio",
        ":platform:core",
        ":architecture:interrupt")

    return True


def build(env):
    env.substitutions = {
        "extis": env[":target"].core.shared_irqs("EXTI"),
        "vectors_location": env.get(":platform:core:vector_table_location", "rom")
    }
    env.outbasepath = "modm/src/modm/driver"
    env.template("gpio_sampler.cpp.in")
    env.template("gpio_sampler.hpp.in")
    env.template("gpio_sampler_impl.hpp.in")
