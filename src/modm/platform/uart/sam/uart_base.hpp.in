/*
 * Copyright (c) 2021, Jeff McBride
 * Copyright (c) 2022, Christopher Durand
 *
 * This file is part of the modm project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
// ----------------------------------------------------------------------------

#pragma once

#include "../device.hpp"

namespace modm::platform
{

/// @ingroup modm_platform_uart
class {{type | capitalize}}Base
{
public:
	enum class Parity : uint32_t
	{
%% if type == "usart"
%% if target.family == "e7x/s7x/v7x" and target.variant == "b"
		Disabled  = US_MR_USART_PAR_NO,
		Even      = US_MR_USART_PAR_EVEN,
		Odd       = US_MR_USART_PAR_ODD,
		Space	  = US_MR_USART_PAR_SPACE,
		Mark      = US_MR_USART_PAR_MARK,
		MultiDrop = US_MR_USART_PAR_MULTIDROP
%% else
		Disabled  = US_MR_PAR_NO,
		Even      = US_MR_PAR_EVEN,
		Odd       = US_MR_PAR_ODD,
		Space	  = US_MR_PAR_SPACE,
		Mark      = US_MR_PAR_MARK,
		MultiDrop = US_MR_PAR_MULTIDROP
%% endif
%% else
		Disabled = UART_MR_PAR_NO,
		Even     = UART_MR_PAR_EVEN,
		Odd      = UART_MR_PAR_ODD,
		Space    = UART_MR_PAR_SPACE,
		Mark     = UART_MR_PAR_MARK
%% endif
	};

%% if type == "usart"
	enum class WordLength : uint32_t
	{
		Bit5 = 0,
		Bit6,
		Bit7,
		Bit8,
		Bit9
	};
%% endif
};

} // namespace modm::platform
