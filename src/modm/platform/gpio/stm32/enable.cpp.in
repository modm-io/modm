/*
 * Copyright (c) 2013-2014, Kevin LÃ¤ufer
 * Copyright (c) 2013-2018, Niklas Hauser
 *
 * This file is part of the modm project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
// ----------------------------------------------------------------------------

#include "../device.hpp"
#include <modm/platform/core/hardware_init.hpp>

void
modm_gpio_enable(void)
{
%%	set prefix = "GPIO"
%% if target.family in ["h7"]
%%	set clock_tree = "AHB4"
%% elif target.family in ["f2", "f4", "f7"]
%%	set clock_tree = "AHB1"
%% elif target.family in ["f0", "f3", "l1"]
%%	set clock_tree = "AHB"
%% elif target.family in ["f1"]
%%	set clock_tree = "APB2"
%%	set prefix = "IOP"
%% elif target.family in ["l4", "l5", "g4"]
%%  set clock_tree = 'AHB2'
%% elif target.family in ["g0", "l0"]
%%  set clock_tree = 'IOP'
%% endif

%% if target.family in ["h7"]
	// Enable I/O compensation cell
	SYSCFG->CCCSR = SYSCFG_CCCSR_EN;
%% endif
%% if target.family in ["f2", "f4", "f7"]
	// Enable I/O compensation cell
	SYSCFG->CMPCR = SYSCFG_CMPCR_CMP_PD;
%% endif

	// Enable GPIO clock
	RCC->{{ clock_tree }}ENR  |=
%% for port in options.enable_ports
		RCC_{{ clock_tree }}ENR_{{ prefix }}{{ port | upper }}EN{% if loop.last %};{% else %} |{% endif %}
%% endfor

	// Reset GPIO peripheral
	RCC->{{ clock_tree }}RSTR |=
%% for port in options.enable_ports
		RCC_{{ clock_tree }}RSTR_{{ prefix }}{{ port | upper }}RST{% if loop.last %};{% else %} |{% endif %}
%% endfor

	RCC->{{ clock_tree }}RSTR &= ~(
%% for port in options.enable_ports
		RCC_{{ clock_tree }}RSTR_{{ prefix }}{{ port | upper }}RST{% if loop.last %});{% else %} |{% endif %}
%% endfor
}

%% if not (target.family == "h7" and target.name in ["45", "47", "55", "57"] and target.core == "m4")
MODM_HARDWARE_INIT_ORDER(modm_gpio_enable, 80);
%% endif
