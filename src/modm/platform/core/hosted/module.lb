#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2016-2018, Niklas Hauser
# Copyright (c) 2017, Fabian Greif
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------

def init(module):
    module.name = "core"
    module.parent = "platform"

def prepare(module, options):
    device = options[":target"]
    target = device.identifier
    if target["platform"] != "hosted":
        return False

    module.depends(
        ":architecture:accessor",
        ":architecture:assert",
        ":architecture:atomic",
        ":architecture:clock",
        ":architecture:delay",
        ":architecture:memory",
        ":architecture:unaligned",
        ":debug")

    return True

def build(env):
    device = env[":target"]
    properties = device.properties
    properties["target"] = target = device.identifier
    properties["partname"] = device.partname
    properties["driver"] = device.get_driver("core")

    env.substitutions = properties
    env.outbasepath = "modm/src/modm/platform/core"

    env.copy("assert.cpp")
    env.copy("memory.cpp")
    env.copy("atomic_lock.hpp")
    env.copy("../avr/unaligned.hpp", "unaligned.hpp")
    env.copy("../cortex/flash_reader.hpp", "flash_reader.hpp")

    env.outbasepath = "modm/src/modm/platform/clock"
    if not env.has_module(":test"):
        env.template("clock.cpp.in")
    env.template("delay.hpp.in")

    if target["family"] in ["windows"]:
        env.log.warning("Delay functions are not implemented!")
        env.log.warning("Assertions are not implemented!")
