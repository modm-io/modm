#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2016-2017, Niklas Hauser
# Copyright (c) 2017, Fabian Greif
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------

class Instance(Module):
    def __init__(self, instance):
        self.instance = instance

    def init(self, module):
        module.name = str(self.instance)
        module.description = "Timer {} instance".format(self.instance)

    def prepare(self, module, options):
        module.depends(":platform:timer")
        return True

    def build(self, env):
        env.substitutions = {"target": env["target"].identifier,
                             "id": self.instance}
        env.outbasepath = "modm/src/modm/platform/timer"

        env.template("timer.hpp.in", "timer_{}.hpp".format(self.instance))


def init(module):
    module.name = ":platform:timer"

def prepare(module, options):
    device = options[":target"]
    if not device.has_driver("timer:lpc"):
        return False

    module.depends(":platform:core")

    for instance in listify(device.get_driver("timer")["instance"]):
        module.add_submodule(Instance(instance))

    return True

def build(env):
    env.substitutions = {"target": env["target"].identifier}
    env.outbasepath = "modm/src/modm/platform/timer"

    env.copy("timer_registers.hpp")
