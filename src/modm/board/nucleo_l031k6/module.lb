#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2016-2018, Niklas Hauser
# Copyright (c) 2017, Fabian Greif
# Copyright (c) 2021, Christopher Durand
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------

def init(module):
    module.name = ":board:nucleo-l031k6"
    module.description = """\
# NUCLEO-L031K6

[Nucleo kit for STM32L031K6](https://www.st.com/en/evaluation-tools/nucleo-l031k6.html)
"""

def prepare(module, options):
    if not options[":target"].partname.startswith("stm32l031k6t"):
        return False

    module.depends(
        ":architecture:clock",
        ":debug",
        ":platform:clock",
        ":platform:core",
        ":platform:gpio",
        ":platform:i2c:1",
        ":platform:spi:1",
        ":platform:uart:2"
    )
    return True

def build(env):
    env.outbasepath = "modm/src/modm/board"
    env.substitutions = {
        "with_logger": True,
        "with_assert": env.has_module(":architecture:assert"),
        "has_gpio_c14_c15": True
    }
    env.template("../board.cpp.in", "board.cpp")
    env.copy('.')
    env.template("../nucleo32_arduino.hpp.in", "nucleo32_arduino.hpp")

    env.outbasepath = "modm/openocd/modm/board/"
    env.copy(repopath("tools/openocd/modm/st_nucleo_l0.cfg"), "st_nucleo_l0.cfg")
    env.collect(":build:openocd.source", "modm/board/st_nucleo_l0.cfg");
